[{"/Users/raj/Documents/GitHub/ethereal/src/serviceWorkerRegistration.ts":"1","/Users/raj/Documents/GitHub/ethereal/src/App.tsx":"2","/Users/raj/Documents/GitHub/ethereal/src/reportWebVitals.ts":"3","/Users/raj/Documents/GitHub/ethereal/src/components/Home.tsx":"4","/Users/raj/Documents/GitHub/ethereal/src/components/colors.ts":"5","/Users/raj/Documents/GitHub/ethereal/src/index.tsx":"6","/Users/raj/Documents/GitHub/ethereal/src/components/styles.tsx":"7"},{"size":5256,"mtime":1614004313859,"results":"8","hashOfConfig":"9"},{"size":247,"mtime":1614187699669,"results":"10","hashOfConfig":"9"},{"size":425,"mtime":1614004313862,"results":"11","hashOfConfig":"9"},{"size":3542,"mtime":1614237290889,"results":"12","hashOfConfig":"9"},{"size":70,"mtime":1614183499198,"results":"13","hashOfConfig":"9"},{"size":818,"mtime":1614004313866,"results":"14","hashOfConfig":"9"},{"size":585,"mtime":1614187659543,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1huq2au",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/raj/Documents/GitHub/ethereal/src/serviceWorkerRegistration.ts",[],"/Users/raj/Documents/GitHub/ethereal/src/App.tsx",[],["32","33"],"/Users/raj/Documents/GitHub/ethereal/src/reportWebVitals.ts",[],"/Users/raj/Documents/GitHub/ethereal/src/components/Home.tsx",["34"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { accent, background } from \"./colors\";\nimport { AnimatePresence, AnimateSharedLayout, motion } from \"framer-motion\";\n// no type\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\";\nimport { NoteProps, NotesProps, OpenedNoteProps, TempNote } from \"../types\";\n\nconst HomeHeader = styled.div`\n  display: flex;\n  padding: 16px;\n  padding-bottom: 0px;\n`;\n\nconst StyledNotesContainer = styled.div`\n  padding: 14px;\n`;\n\nconst Title = styled.p`\n  color: ${accent};\n  font-size: 2rem;\n  /* opacity: 0.8; */\n`;\nconst NoteTitle = motion(\n  styled.p`\n    font-size: 2rem;\n    /* opacity: 0.8; */\n  `\n);\nconst NoteData = motion(\n  styled.p`\n    font-size: 1rem;\n    opacity: 0.8;\n  `\n);\nconst StyledHome = motion(\n  styled.div`\n    height: 100vh;\n    background: ${background};\n  `\n);\n\nconst StyledNote = motion(\n  styled.div`\n    padding: 20px;\n    margin: 6px;\n    border: 0.5px solid ${accent};\n    /* box-shadow: 0 0 2px 0.5px black; */\n    background-color: ${background};\n  `\n);\n\nconst StyledOpenedNote = motion(\n  styled.div`\n    height: 100vh;\n    position: absolute;\n    width: 100%;\n    z-index: 10;\n    background-color: ${background};\n  `\n);\n\nexport default function Home() {\n  const [openedNote, setOpenedNote] = useState<TempNote>(null);\n\n  return (\n    <StyledHome>\n      <AnimateSharedLayout type=\"crossfade\">\n        <AnimatePresence>\n          {openedNote && <OpenedNotes {...{ openedNote, setOpenedNote }} />}\n        </AnimatePresence>\n        <HomeHeader>\n          <Title>ethereal</Title>\n        </HomeHeader>\n        <Notes {...{ setOpenedNote, openedNote }} />\n      </AnimateSharedLayout>\n    </StyledHome>\n  );\n}\n\nfunction Notes({ setOpenedNote, openedNote }: NotesProps) {\n  return (\n    <StyledNotesContainer>\n      <ResponsiveMasonry\n        gutter={\"5\"}\n        columnsCountBreakPoints={{ 300: 2, 700: 4, 1000: 5 }}\n      >\n        <Masonry>\n          <Note\n            {...{\n              setOpenedNote,\n              openedNote,\n              note: { title: \"test title1\", id: \"1\" },\n            }}\n          />\n          <Note\n            {...{\n              setOpenedNote,\n              openedNote,\n              note: { title: \"test title 2\", id: \"2\" },\n            }}\n          />\n          <Note\n            {...{\n              setOpenedNote,\n              openedNote,\n              note: {\n                title: \"test title 3\",\n                data: \"this is test data\",\n                id: \"3\",\n              },\n            }}\n          />\n        </Masonry>\n      </ResponsiveMasonry>\n    </StyledNotesContainer>\n  );\n}\n\nfunction Note({ note, setOpenedNote, openedNote }: NoteProps) {\n  return (\n    <StyledNote\n      layoutId={note?.id}\n      onTap={() => {\n        setOpenedNote(note);\n      }}\n      initial={{ opacity: 0, y: -12 }}\n      animate={{ opacity: 1, y: 0 }}\n    >\n      <NoteTitle layoutId={`${note?.id}-note-title`}>{note?.title}</NoteTitle>\n      <NoteData layoutId={`${note?.id}-note-data`}>{note?.data}</NoteData>\n    </StyledNote>\n  );\n}\n\nfunction OpenedNotes({ openedNote, setOpenedNote }: OpenedNoteProps) {\n  return (\n    <StyledOpenedNote\n      layout\n      layoutId={openedNote?.id}\n      onTap={() => setOpenedNote(null)}\n    >\n      <NoteTitle layoutId={`${openedNote?.id}-note-title`}>\n        {openedNote?.title}\n      </NoteTitle>\n      <NoteData layoutId={`${openedNote?.id}-note-data`}>\n        {openedNote?.data}\n      </NoteData>\n    </StyledOpenedNote>\n  );\n}\n","/Users/raj/Documents/GitHub/ethereal/src/components/colors.ts",[],"/Users/raj/Documents/GitHub/ethereal/src/index.tsx",[],"/Users/raj/Documents/GitHub/ethereal/src/components/styles.tsx",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":1,"column":17,"nodeType":"41","messageId":"42","endLine":1,"endColumn":26},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]